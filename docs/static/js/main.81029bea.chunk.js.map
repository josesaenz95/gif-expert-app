{"version":3,"sources":["views/components/AddCategory.js","views/components/GifGridItem.js","helpers/getGifs.js","config/constants.js","views/components/GifGrid.js","hooks/useFetchGifs.js","views/GifExpertApp/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAMC,iBACHJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfpB,SAACP,GAEvBF,EAAcE,EAAMQ,OAAOF,a,QCPtBG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAIhC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCPHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,6BCFM,oCDEN,SAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QARvB,kBAWZY,GAXY,4CAAH,sDEIPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAc,IAAD,EACZpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACNlB,EAAQC,GAAUkB,MAAK,SAAAP,GACnBK,EAAS,CACLV,KAAMK,EACNG,SAAS,SAGlB,CAACd,IAEGe,EDV2BI,CAAanB,GAAjCW,EAFuB,EAE7BL,KAAcQ,EAFe,EAEfA,QAEtB,OACI,qCACI,6BAAKd,IACJc,GAAW,mBAAGlB,UAAU,mCAAb,sBACZ,qBAAKA,UAAU,YAAf,SACI,6BAEQe,EAAOH,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAA+BA,GAAbA,EAAIC,eEbrCU,EAAe,WAAO,IAAD,EAEMxC,mBAAS,CAAC,cAFhB,mBAEvByC,EAFuB,KAEX1C,EAFW,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI0C,EAAWb,KAAI,SAAAR,GAAQ,OAAI,cAAC,EAAD,CAASA,SAAUA,GAAeA,Y,MCV7EsB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.81029bea.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (event) => {\n\n        setInputValue(event.target.value);\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if(inputValue.trim().length > 2 ){\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n    \n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","import React from 'react';\n\nexport const GifGridItem = ({title, url}) => {\n\n        // console.log(title, url);\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    );\n}\n","import { GIPHY_API_KEY } from \"../config/constants\";\n\nexport const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${GIPHY_API_KEY}`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n    return gifs;\n}","export const GIPHY_API_KEY = 'unymfHDDv5fRmTkYtbfh8RfKXTbwbpKt';","import React from 'react'\n\nimport { GifGridItem } from './GifGridItem';\n\nimport { useFetchGifs } from '../../hooks/useFetchGifs';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3>{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Cargando</p>}\n            <div className=\"card-grid\">\n                <ol>\n                    {\n                        images.map(img => (\n                            <GifGridItem key={img.id} { ...img } />\n                        ))\n                    }\n                </ol>\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category).then(images => {\n            setState({\n                data: images,\n                loading: false\n            });\n        });\n    }, [category]);\n\n    return state;\n}","import React, { useState } from 'react'\nimport { AddCategory } from '../components/AddCategory';\nimport { GifGrid } from '../components/GifGrid';\n\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Samuari X']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr/>\n\n            <ol>\n                {\n                categories.map(category => <GifGrid category={category} key={category} />)\n                }\n            </ol>\n        </>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './views/GifExpertApp/GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}